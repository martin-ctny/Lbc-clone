{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8000/api/posts/\";\nconst getPosts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getPost = async id => {\n  try {\n    const response = await axios.get(`${API_URL}${id}`);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst createPost = async post => {\n  try {\n    //post avec formData\n    const response = await axios.post(API_URL, post);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst deletePost = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}${id}`);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst PostsService = {\n  getPosts,\n  getPost,\n  createPost,\n  deletePost\n};\nexport default PostsService;","map":{"version":3,"names":["axios","API_URL","getPosts","response","get","data","err","console","log","getPost","id","createPost","post","deletePost","delete","PostsService"],"sources":["/Users/martincantonny/Desktop/code/atelier/clone-lbc/mongoose/app/src/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8000/api/posts/\";\n\nconst getPosts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getPost = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}${id}`);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst createPost = async (post) => {\n  try {\n    //post avec formData\n    const response = await axios.post(API_URL, post);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst deletePost = async (id) => {\n  try {\n    const response = await axios.delete(`${API_URL}${id}`);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst PostsService = {\n  getPosts,\n  getPost,\n  createPost,\n  deletePost,\n};\n\nexport default PostsService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AACD,MAAMG,OAAO,GAAG,MAAOC,EAAE,IAAK;EAC5B,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,GAAES,EAAG,EAAC,CAAC;IACnD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AACD,MAAMK,UAAU,GAAG,MAAOC,IAAI,IAAK;EACjC,IAAI;IACF;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAACX,OAAO,EAAEW,IAAI,CAAC;IAChD,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AACD,MAAMO,UAAU,GAAG,MAAOH,EAAE,IAAK;EAC/B,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAE,GAAEb,OAAQ,GAAES,EAAG,EAAC,CAAC;IACtD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AAED,MAAMS,YAAY,GAAG;EACnBb,QAAQ;EACRO,OAAO;EACPE,UAAU;EACVE;AACF,CAAC;AAED,eAAeE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}