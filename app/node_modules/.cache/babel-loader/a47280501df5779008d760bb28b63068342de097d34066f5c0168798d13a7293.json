{"ast":null,"code":"var _jsxFileName = \"/Users/martincantonny/Desktop/code/atelier/clone-lbc/mongoose/app/src/components/posts/PostList.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PostsService from \"../../src/services/post.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  const getAllPosts = async () => {\n    try {\n      const allPosts = await PostsService.getPosts();\n      setPosts(allPosts);\n      console.log(allPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    PostsService.deletePost(id);\n    const filteredPosts = posts.filter(post => post._id !== id);\n    setPosts(filteredPosts);\n  };\n  const handleClick = (e, id) => {\n    navigate(`/posts/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: posts === null || posts === void 0 ? void 0 : posts.map(post => {\n      var _post$uploadFiles$;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [post._id && post.uploadFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"300px\"\n          },\n          src: (_post$uploadFiles$ = post.uploadFiles[0]) === null || _post$uploadFiles$ === void 0 ? void 0 : _post$uploadFiles$.Location,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            mb: 4\n          },\n          onClick: e => handleClick(e, post._id),\n          children: \"voir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            mb: 4\n          },\n          onClick: e => handleDelete(e, post._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Box","Button","useState","useEffect","useNavigate","PostsService","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","navigate","getAllPosts","allPosts","getPosts","console","log","error","handleDelete","e","id","preventDefault","deletePost","filteredPosts","filter","post","_id","handleClick","children","map","_post$uploadFiles$","uploadFiles","length","style","width","src","Location","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","content","variant","sx","mb","onClick","_c","$RefreshReg$"],"sources":["/Users/martincantonny/Desktop/code/atelier/clone-lbc/mongoose/app/src/components/posts/PostList.jsx"],"sourcesContent":["import { Box, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PostsService from \"../../src/services/post.service\";\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  const getAllPosts = async () => {\n    try {\n      const allPosts = await PostsService.getPosts();\n      setPosts(allPosts);\n      console.log(allPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    PostsService.deletePost(id);\n    const filteredPosts = posts.filter((post) => post._id !== id);\n    setPosts(filteredPosts);\n  };\n\n  const handleClick = (e, id) => {\n    navigate(`/posts/${id}`);\n  };\n\n  return (\n    <Box>\n      {posts?.map((post) => (\n        <div key={post.id}>\n          {post._id && post.uploadFiles.length > 0 && (\n            <img\n              style={{ width: \"300px\" }}\n              src={post.uploadFiles[0]?.Location}\n              alt=\"\"\n            />\n          )}\n          <h2>{post.title}</h2>\n          <p>{post.content}</p>\n          <Button\n            variant=\"outlined\"\n            sx={{ mb: 4 }}\n            onClick={(e) => handleClick(e, post._id)}\n          >\n            voir\n          </Button>\n          <Button\n            variant=\"outlined\"\n            sx={{ mb: 4 }}\n            onClick={(e) => handleDelete(e, post._id)}\n          >\n            Delete\n          </Button>\n        </div>\n      ))}\n    </Box>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}