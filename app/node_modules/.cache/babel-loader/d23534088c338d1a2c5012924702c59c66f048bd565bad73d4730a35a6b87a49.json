{"ast":null,"code":"var _jsxFileName = \"/Users/martincantonny/Desktop/code/atelier/clone-lbc/mongoose/app/src/components/dropzone/DropZone.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyDropzone(_ref) {\n  _s();\n  let {\n    newPost,\n    setNewPost\n  } = _ref;\n  const [imageURLs, setImageURLs] = useState(Array(8).fill(\"\"));\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      const newImageURLs = [...imageURLs];\n      const file = acceptedFiles[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        newImageURLs[0] = reader.result;\n        setImageURLs(newImageURLs);\n      };\n    }\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    setNewPost({\n      ...newPost,\n      uploadFiles: acceptedFiles\n    });\n    console.log(newPost);\n  }, [acceptedFiles]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      ...getRootProps(),\n      children: [...Array(8)].map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            height: 100,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            border: \"1px trough gray\",\n            cursor: \"pointer\",\n            backgroundImage: `url(${imageURLs[index]})`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"D\\xE9posez des fichiers ici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MyDropzone, \"kzA3EahD0hsjpsqzrhNLU4oGgHQ=\", false, function () {\n  return [useDropzone];\n});\n_c = MyDropzone;\nexport default MyDropzone;\nvar _c;\n$RefreshReg$(_c, \"MyDropzone\");","map":{"version":3,"names":["useEffect","useState","useDropzone","Grid","Paper","Box","jsxDEV","_jsxDEV","MyDropzone","_ref","_s","newPost","setNewPost","imageURLs","setImageURLs","Array","fill","acceptedFiles","getRootProps","getInputProps","accept","onDrop","newImageURLs","file","reader","FileReader","readAsDataURL","onload","result","files","map","children","path","size","fileName","_jsxFileName","lineNumber","columnNumber","uploadFiles","console","log","sx","flexGrow","container","spacing","_","index","item","xs","height","display","alignItems","justifyContent","border","cursor","backgroundImage","backgroundSize","backgroundPosition","_c","$RefreshReg$"],"sources":["/Users/martincantonny/Desktop/code/atelier/clone-lbc/mongoose/app/src/components/dropzone/DropZone.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\n\nfunction MyDropzone({ newPost, setNewPost }) {\n  const [imageURLs, setImageURLs] = useState(Array(8).fill(\"\"));\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    onDrop: (acceptedFiles) => {\n      const newImageURLs = [...imageURLs];\n      const file = acceptedFiles[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        newImageURLs[0] = reader.result;\n        setImageURLs(newImageURLs);\n      };\n    },\n  });\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  useEffect(() => {\n    setNewPost({ ...newPost, uploadFiles: acceptedFiles });\n    console.log(newPost);\n  }, [acceptedFiles]);\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} {...getRootProps()}>\n        {[...Array(8)].map((_, index) => (\n          <Grid item xs={3} key={index}>\n            <Paper\n              sx={{\n                height: 100,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                border: \"1px trough gray\",\n                cursor: \"pointer\",\n                backgroundImage: `url(${imageURLs[index]})`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n              }}\n            >\n              <input {...getInputProps()} />\n              <span>DÃ©posez des fichiers ici</span>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n      <ul>{files}</ul>\n    </Box>\n  );\n}\n\nexport default MyDropzone;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}